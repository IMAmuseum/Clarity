<?php

/**
 * @file
 * Assignment Schema
 */
 
function assignment_schema() {
	$schema['assignment'] = array(
		'description' => 'Table for assignment entity',
		'fields' => array(
			'aid' => array(
				'description'	=> 'The primary key for the assignments entity',
				'type'			=> 'serial',
				'unsigned'		=> TRUE,
				'not null'		=> TRUE,
			),
			'uid' => array(
				'description' 	=> 'The user assigned to this assignment',
				'type' 			=> 'int',
				'unsigned' 		=> TRUE,
				'not null'		=> TRUE,
			),
			'sid' => array(
				'description'	=> 'The statistic assigned to this assignment',
				'type'			=> 'int',
				'unsigned'		=> TRUE,
				'not null'		=> TRUE,
			),
			'created' => array(
				'description'	=> 'Date the statistic was created',
				'type'			=> 'int',
				'unsigned'		=> TRUE,
				'not null'		=> TRUE
			),
			'expire_date' => array(
				'description'	=> 'Date when assignment expires',
				'type'			=> 'int',
				'unsigned'		=> TRUE,			
				'not null'		=> TRUE
			),
			'modified_date' => array(
				'description'	=> 'Date when assignment was modified',
				'type'			=> 'int',
				'unsigned'		=> TRUE,			
				'not null'		=> FALSE
			),
			'complete' => array(
				'description'	=> 'Assignment completed',
				'type'			=> 'int',
				'not null'		=> TRUE,
				'size'			=> 'tiny',
				'default'		=> 0
			),
			'data' => array(
        		'type' => 'text',
        		'not null' => FALSE,
        		'size' => 'big',
       			'serialize' => TRUE,
		        'description' => 'A serialized array of additional data related to the assignment',
        		'merge' => TRUE,        
      		)   
		),
		'primary key' => array('aid'),
	);	
	
	return $schema;
}


function assignment_field_schema($field) {

  switch($field['type']) {

    case 'clarity_assignment_properties':
    
      return array(
        'columns' => array(
          'key' => array(
            'type' => 'varchar',
            'length' => 128,
            'not null' => true
          ),
          'type' => array(
            'type' => 'varchar',
            'length' => 128,
            'not null' => true
          ),          
          'label' => array(
            'type' => 'varchar',
            'length' => 128,
            'not null' => true
          ),
        )             
      );
      
  }

}


/**
 * Update to add the assignment_flag table
 */ 
function assignment_update_7100(&$sandbox) {

  $schema = array(
    'description' => 'Table for assignment flags',
    'fields' => array(
      'assignment_id' => array(
        'description' => 'The id of the flagged assignment',
        'type'      => 'int',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ),
      'comment' => array(
        'description'   => 'A comment for the flag',      
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',      
      )
    ),
    'primary key' => array('assignment_id'),
    'foreign keys' => array(
      'assignment_id' => array('assignment' => 'aid'),
    ),        
  );
  
  return db_create_table('assignment_flag', $schema);  
  
}

/**
 * Update to add the assignment_properties table
 */ 
function assignment_update_7101(&$sandbox) {

  $schema = array(
    'description' => 'Table for assignment properties',
    'fields' => array(
      'assignment_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),    
      'key' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'value' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big'      
      )    
    ),
    'unique keys' => array('aid_key' => array('assignment_id', 'key')),
    'foreign keys' => array(
      'assignment_id' => array('assignment' => 'aid'),
    ),
  );
  
  return db_create_table('assignment_properties', $schema);

}